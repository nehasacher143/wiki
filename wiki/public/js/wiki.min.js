(function () {
	'use strict';

	window.EditWiki = class EditWiki extends Wiki {
		constructor() {
			var this$1 = this;

			super();
			frappe.provide("frappe.ui.keys");
			$("document").ready(function () {
				frappe
					.call("wiki.wiki.doctype.wiki_page.wiki_page.get_sidebar_for_page", {
						wiki_page: $('[name="wiki_page"]').val(),
					})
					.then(function (result) {
						$(".doc-sidebar").empty().append(result.message);
						this$1.activate_sidebars();
						this$1.set_active_sidebar();
						this$1.set_empty_ul();
						this$1.set_sortable();
						this$1.set_add_item();
						if ($('[name="new"]').first().val()) {
							this$1.add_new_link();
						}
					});
			});
		}

		activate_sidebars() {
			$(".sidebar-item").each(function (index) {
				var active_class = "active";
				var page_href = window.location.pathname;
				if (page_href.indexOf("#") !== -1) {
					page_href = page_href.slice(0, page_href.indexOf("#"));
				}
				if (page_href.split('/').slice(0,-1).join('/')== $(this).data("route")) {
					$(this).addClass(active_class);
					$(this).find("a").addClass(active_class);
				}
			});
			// scroll the active sidebar item into view
			var active_sidebar_item = $(".sidebar-item.active");
			if (active_sidebar_item.length > 0) {
				active_sidebar_item.get(0).scrollIntoView(true, {
					behavior: "smooth",
					block: "nearest",
				});
			}
		}

		set_empty_ul() {
			$(".collapsible").each(function () {
				if ($(this).parent().find("ul").length == 0) {
					$(this)
						.parent()
						.append(
							$("<ul class=\"list-unstyled hidden\" style=\"min-height:20px;\"> </ul")
						);
				}
			});
		}

		set_sortable() {
			$(".web-sidebar ul").each(function () {
				new Sortable(this, {
					group: {
						name: "qux",
						put: ["qux"],
						pull: ["qux"],
					},
				});
			});
		}

		set_add_item() {
			$("<div class=\"text-muted add-sidebar-item\">+ Add Item</div>").appendTo(
				$(".web-sidebar")
			);
			var me = this;
			$(".add-sidebar-item").click(function () {
				var dfs = me.get_add_new_item_dialog_fields();

				var dialog = new frappe.ui.Dialog({
					title: "Add Components to Sidebar",
					fields: dfs,
					primary_action: function (fields) {
						if (fields.type == "Add Wiki Page") {
							me.add_wiki_page(fields);
						} else {
							me.add_wiki_sidebar(fields);
						}
						dialog.hide();
					},
				});
				dialog.show();
			});
		}

		get_add_new_item_dialog_fields() {
			return [
				{
					fieldname: "type",
					label: "Add Type",
					fieldtype: "Autocomplete",
					options: ["Add Wiki Page", "New Wiki Sidebar"],
				},
				{
					fieldname: "wiki_page",
					label: "Wiki Page",
					fieldtype: "Link",
					options: "Wiki Page",
					depends_on: "eval: doc.type=='Add Wiki Page'",
					mandatory_depends_on: "eval: doc.type=='Add Wiki Page'",
				},
				{
					fieldname: "route",
					label: "Name",
					fieldtype: "Data",
					depends_on: "eval: doc.type=='New Wiki Sidebar'",
					mandatory_depends_on: "eval: doc.type=='New Wiki Sidebar'",
				},
				{
					fieldname: "title",
					label: "Title",
					fieldtype: "Data",
					depends_on: "eval: doc.type=='New Wiki Sidebar'",
					mandatory_depends_on: "eval: doc.type=='New Wiki Sidebar'",
				} ];
		}

		add_wiki_page(fields) {
			var me = this;
			frappe.call({
				method: "frappe.client.get_value",
				args: {
					doctype: "Wiki Page",
					fieldname: "title",
					filters: fields.wiki_page,
				},
				callback: function (r) {
					var $new_page = me.get_new_page_html(r, fields);

					$new_page.appendTo(
						$(".doc-sidebar .sidebar-items")
							.children(".list-unstyled")
							.not(".hidden")
							.first()
					);
				},
			});
		}

		get_new_page_html(r, fields) {
			return $(("\n\t\t<li class=\"sidebar-item\" data-type=\"Wiki Page\"\n\t\t\tdata-name=\"" + (fields.wiki_page) + "\" data-new=1 >\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<a href=\"#\" class=\"green\" >\n\t\t\t\t\t\t\t" + (r.message.title) + "\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t\t"));
		}

		add_wiki_sidebar(fields) {
			var $new_page = this.get_wiki_sidebar_html(fields);

			$new_page.appendTo(
				$(".doc-sidebar .sidebar-items")
					.children(".list-unstyled")
					.not(".hidden")
					.first()
			);

			$(".web-sidebar ul").each(function () {
				new Sortable(this, {
					group: {
						name: "qux",
						put: ["qux"],
						pull: ["qux"],
					},
				});
			});
		}

		get_wiki_sidebar_html(fields) {
			return $(("\n\t\t\t<li class=\"sidebar-group\" data-type=\"Wiki Sidebar\"\n\t\t\t\tdata-name=\"new-sidebar\" data-group-name=\"" + (fields.route) + "\"\n\t\t\t\tdata-new=1 data-title=\"" + (fields.title) + "\" draggable=\"false\">\n\n\t\t\t\t<div class=\"collapsible\">\n\t\t\t\t\t<span class=\"drop-icon hidden\">\n\t\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t<path d=\"M8 10L12 14L16 10\" stroke=\"#4C5A67\"\n\t\t\t\t\t\t\t\tstroke-miterlimit=\"10\" stroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"></path>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span class=\"drop-left\">\n\t\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tfill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t<path d=\"M10 16L14 12L10 8\" stroke=\"#4C5A67\"\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"h6\">" + (fields.title) + "</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul class=\"list-unstyled hidden\" style=\"min-height:20px;\"> </ul>\n\t\t\t</li>\n\t\t\t"));
		}

		add_new_link() {
			var $new_page = $("\n\t\t\t<li class=\"sidebar-item\" data-type=\"Wiki Page\" data-name=\"new-wiki-page\" data-new=1 ><div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"#\" class=\"green\">New Wiki Page</a>\n\t\t\t\t\t</div></div>\n\t\t\t\t\t</li>\n\t\t");

			$new_page.appendTo(
				$(".doc-sidebar .sidebar-items")
					.children(".list-unstyled")
					.not(".hidden")
					.first()
			);
		}
	};

}());
//# sourceMappingURL=wiki.min.js.map
